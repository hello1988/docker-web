
啟動image
docker run -t -i -p 80:80 IMAGE_ID /bin/bash
docker start IMAGE_ID

暫停
docker pause IMAGE_ID
取消暫停
docker unpause IMAGE_ID
停止
docker stop IMAGE_ID

刪除image
docker rmi -f IMAGE_ID

啟動httpd
/usr/sbin/httpd -f /etc/httpd/conf/httpd.conf &


====== web server 啟動指令 ======
◎不能有大寫
docker build -t blisschen/web .

docker rm -f web mysql

docker run --name mysql \
-v /etc/localtime:/etc/localtime:ro \
-p 3306:3306 \
-e MYSQL_ROOT_PASSWORD=password \
-e MYSQL_DATABASE=items \
-d mysql

docker run --name web \
-itd -p 80:80 \
--link mysql:mysql \
blisschen/web

docker exec web /usr/sbin/httpd -f /etc/httpd/conf/httpd.conf &
====== web server 啟動指令 End ======

cd var/log/httpd/




匯出映像檔
sudo docker export db > db.tar

匯入映像檔
docker import db.tar my-db
cat db.tar | docker import - db
cat hinaWeb_Export.tar | docker import - local/hinaweb
sudo docker import http://example.com/exampleimage.tgz example/imagerepo

註冊Docker Hub
blisschen
Ikjl925

倉庫註冊器
sudo docker run -d -p 5000:5000 registry

上傳之前要先標記
docker tag my-website:v2 blisschen/my-website
然後再上傳
docker push blisschen/my-website

清空所有容器
docker rm -f $(docker ps -a -q)
docker rmi -f $(docker images -a -q)

TODO 
mysql 容器儲存狀態

====== udemy ======
docker search mysql | grep docker.io/mysql
docker pull mysql
docker images | grep mysql

#建立鏡射目錄
mkdir -p /var/local/mysql
chmod o+rwx /var/local/mysql
chcon -t svirt_sandbox_file_t /var/local/mysql

docker run -d --name mysql \
-e MYSQL_ROOT_PASSWORD=password -p 3306:3306 \
-e MYSQL_USER=user1 -e MYSQL_PASSWORD=user1 \
-e MYSQL_DATABASE=items \
-v /var/local/mysql:/var/lib/mysql \
mysql

CREATE TABLE t (c CHAR(20) CHARACTER SET utf8 COLLATE utf8_bin);

docker exec -it mysql bash
mysql -h $HOSTNAME -uroot -ppassword items

====== nginx ======
docker run --restart=always --name mysql -v /etc/localtime:/etc/localtime:ro -p 3306:3306 -v /works/db:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=rootroot -e MYSQL_DATABASE=test_project -e MYSQL_USER=project -e MYSQL_PASSWORD=12345678 -d mysql/mysql-server:5.5
docker run --restart=always --name php-fpm_5.2 -v /etc/localtime:/etc/localtime:ro -v /works/www:/works/www --link mysql:db -d helder/php-5.2
docker run --restart=always --name nginx -v /etc/localtime:/etc/localtime:ro -p 80:80 -e NGINX_SITE_ROOT=/works/www -v /works/www:/works/www -v /works/nginx/log:/var/log/nginx/ --link php-fpm_5.2:phpfpm -d nginx

// test


docker run --name php-fpm_5.2 \
-v /etc/localtime:/etc/localtime:ro \
--link mysql:db \
-d helder/php-5.2

docker run --name nginx \
-v /etc/localtime:/etc/localtime:ro \
-p 80:80 \
-e NGINX_SITE_ROOT=/works/www \
--link php-fpm_5.2:phpfpm \
-d nginx
